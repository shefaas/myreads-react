{"ast":null,"code":"var _jsxFileName = \"/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/BooksGrid.js\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BooksGrid = ({\n  shelvedBooks,\n  searchBooks,\n  onBookshelfUpdate\n}) => {\n  const mergeShelfData = () => {\n    const searchBooksWithShelfData = [];\n\n    for (const shelvedBook of shelvedBooks) {\n      for (const searchBook of searchBooks) {\n        console.log(\"Book: \", {\n          searchBook\n        });\n\n        if (searchBook.id === shelvedBook.id) {\n          searchBooksWithShelfData.push({ ...searchBook,\n            shelf: shelvedBook.shelf\n          });\n        }\n\n        searchBooksWithShelfData.push(searchBook);\n      }\n    }\n\n    ;\n    return searchBooksWithShelfData;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"books-grid\",\n    children: !searchBooks ? shelvedBooks.map(book => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Book, {\n          book: book,\n          onBookshelfUpdate: onBookshelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this);\n    }) : searchBooks.map(book => {\n      const shelvedCopy = shelvedBooks.filter(shelvedBook => shelvedBook.id === book.id);\n      return shelvedCopy.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Book, {\n          book: { ...book,\n            shelf: shelvedCopy[0].shelf\n          },\n          onBookshelfUpdate: onBookshelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Book, {\n          book: book,\n          onBookshelfUpdate: onBookshelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BooksGrid;\nBooksGrid.propTypes = {\n  shelvedBooks: PropTypes.array.isRequired,\n  searchBooks: PropTypes.array,\n  onBookshelfUpdate: PropTypes.func\n};\nexport default BooksGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksGrid\");","map":{"version":3,"sources":["/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/BooksGrid.js"],"names":["PropTypes","Book","BooksGrid","shelvedBooks","searchBooks","onBookshelfUpdate","mergeShelfData","searchBooksWithShelfData","shelvedBook","searchBook","console","log","id","push","shelf","map","book","shelvedCopy","filter","length","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA;AAA7B,CAAD,KAAsD;AAEtE,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMC,wBAAwB,GAAG,EAAjC;;AACA,SAAK,MAAMC,WAAX,IAA0BL,YAA1B,EAAwC;AACpC,WAAK,MAAMM,UAAX,IAAyBL,WAAzB,EAAsC;AAClCM,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB;AAACF,UAAAA;AAAD,SAAtB;;AACA,YAAIA,UAAU,CAACG,EAAX,KAAkBJ,WAAW,CAACI,EAAlC,EAAsC;AACrCL,UAAAA,wBAAwB,CAACM,IAAzB,CAA8B,EAAE,GAAGJ,UAAL;AAAiBK,YAAAA,KAAK,EAAEN,WAAW,CAACM;AAApC,WAA9B;AAEE;;AACAP,QAAAA,wBAAwB,CAACM,IAAzB,CAA8BJ,UAA9B;AAEN;AACJ;;AAAA;AACD,WAAOF,wBAAP;AACD,GAdD;;AAiBA,sBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cACG,CAACH,WAAD,GACGD,YAAY,CAACY,GAAb,CAAkBC,IAAD,IAAU;AACzB,0BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,iBAAiB,EAAEX;AAArC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUW,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,CADH,GAQGR,WAAW,CAACW,GAAZ,CAAiBC,IAAD,IAAU;AACxB,YAAMC,WAAW,GAAGd,YAAY,CAACe,MAAb,CAAoBV,WAAW,IAAIA,WAAW,CAACI,EAAZ,KAAmBI,IAAI,CAACJ,EAA3D,CAApB;AACA,aAAOK,WAAW,CAACE,MAAZ,GAAqB,CAArB,gBAEL;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE,EAAC,GAAGH,IAAJ;AAAUF,YAAAA,KAAK,EAAEG,WAAW,CAAC,CAAD,CAAX,CAAeH;AAAhC,WAAZ;AAAoD,UAAA,iBAAiB,EAAET;AAAvE;AAAA;AAAA;AAAA;AAAA;AADF,SAAUW,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,cAFK,gBAMH;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEI,IAAZ;AAAkB,UAAA,iBAAiB,EAAEX;AAArC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUW,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,cANJ;AAUD,KAZD;AATN;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5CD;;KAAMV,S;AA8CNA,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,YAAY,EAAEH,SAAS,CAACqB,KAAV,CAAgBC,UADV;AAEpBlB,EAAAA,WAAW,EAAEJ,SAAS,CAACqB,KAFH;AAGpBhB,EAAAA,iBAAiB,EAAEL,SAAS,CAACuB;AAHT,CAAtB;AAMA,eAAerB,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\n\nimport Book from \"./Book\";\n\nconst BooksGrid = ({ shelvedBooks, searchBooks, onBookshelfUpdate }) => {\n\n  const mergeShelfData = () => {\n    const searchBooksWithShelfData = [];\n    for (const shelvedBook of shelvedBooks) {\n        for (const searchBook of searchBooks) {\n            console.log(\"Book: \", {searchBook})\n            if (searchBook.id === shelvedBook.id) {\n             searchBooksWithShelfData.push({ ...searchBook, shelf: shelvedBook.shelf });\n\n              }\n               searchBooksWithShelfData.push(searchBook);\n\n        }\n    };\n    return searchBooksWithShelfData;\n  }\n\n\n  return (\n    <ol className=\"books-grid\">\n      {!searchBooks\n        ? shelvedBooks.map((book) => {\n            return (\n              <div key={book.id}>\n                <Book book={book} onBookshelfUpdate={onBookshelfUpdate} />\n              </div>\n            );\n          })\n        : searchBooks.map((book) => {\n            const shelvedCopy = shelvedBooks.filter(shelvedBook => shelvedBook.id === book.id)\n            return shelvedCopy.length > 0 ? \n             (\n              <div key={book.id}>\n                <Book book={{...book, shelf: shelvedCopy[0].shelf}} onBookshelfUpdate={onBookshelfUpdate} />\n              </div>\n            ) : (\n                <div key={book.id}>\n                  <Book book={book} onBookshelfUpdate={onBookshelfUpdate} />\n                </div>\n              )\n          })}\n    </ol>\n  );\n};\n\nBooksGrid.propTypes = {\n  shelvedBooks: PropTypes.array.isRequired,\n  searchBooks: PropTypes.array,\n  onBookshelfUpdate: PropTypes.func,\n};\n\nexport default BooksGrid;\n"]},"metadata":{},"sourceType":"module"}