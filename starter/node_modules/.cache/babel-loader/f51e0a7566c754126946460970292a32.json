{"ast":null,"code":"var _jsxFileName = \"/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/BooksGrid.js\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BooksGrid = ({\n  shelvedBooks,\n  searchBooks,\n  onBookshelfUpdate\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"books-grid\",\n    children: !searchBooks ? shelvedBooks.map(book => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Book, {\n          book: book,\n          onBookshelfUpdate: onBookshelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }, this);\n    }) : searchBooks.map(book => {\n      const shelvedCopy = shelvedBooks.filter(shelvedBook => shelvedBook.id === book.id);\n      return shelvedCopy.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Book, {\n          book: { ...book,\n            shelf: shelvedCopy[0].shelf\n          },\n          onBookshelfUpdate: onBookshelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Book, {\n          book: book,\n          onBookshelfUpdate: onBookshelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BooksGrid;\nBooksGrid.propTypes = {\n  shelvedBooks: PropTypes.array.isRequired,\n  searchBooks: PropTypes.array,\n  onBookshelfUpdate: PropTypes.func\n};\nexport default BooksGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksGrid\");","map":{"version":3,"sources":["/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/BooksGrid.js"],"names":["PropTypes","Book","BooksGrid","shelvedBooks","searchBooks","onBookshelfUpdate","map","book","id","shelvedCopy","filter","shelvedBook","length","shelf","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA;AAA7B,CAAD,KAAsD;AACtE,sBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cACG,CAACD,WAAD,GACGD,YAAY,CAACG,GAAb,CAAkBC,IAAD,IAAU;AACzB,0BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,iBAAiB,EAAEF;AAArC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUE,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,CADH,GAQGJ,WAAW,CAACE,GAAZ,CAAiBC,IAAD,IAAU;AACxB,YAAME,WAAW,GAAGN,YAAY,CAACO,MAAb,CACjBC,WAAD,IAAiBA,WAAW,CAACH,EAAZ,KAAmBD,IAAI,CAACC,EADvB,CAApB;AAGA,aAAOC,WAAW,CAACG,MAAZ,GAAqB,CAArB,gBACL;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,IAAI,EAAE,EAAE,GAAGL,IAAL;AAAWM,YAAAA,KAAK,EAAEJ,WAAW,CAAC,CAAD,CAAX,CAAeI;AAAjC,WADR;AAEE,UAAA,iBAAiB,EAAER;AAFrB;AAAA;AAAA;AAAA;AAAA;AADF,SAAUE,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADK,gBAQL;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAED,IAAZ;AAAkB,UAAA,iBAAiB,EAAEF;AAArC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUE,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cARF;AAYD,KAhBD;AATN;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA9BD;;KAAMN,S;AAgCNA,SAAS,CAACY,SAAV,GAAsB;AACpBX,EAAAA,YAAY,EAAEH,SAAS,CAACe,KAAV,CAAgBC,UADV;AAEpBZ,EAAAA,WAAW,EAAEJ,SAAS,CAACe,KAFH;AAGpBV,EAAAA,iBAAiB,EAAEL,SAAS,CAACiB;AAHT,CAAtB;AAMA,eAAef,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\n\nimport Book from \"./Book\";\n\nconst BooksGrid = ({ shelvedBooks, searchBooks, onBookshelfUpdate }) => {\n  return (\n    <ol className=\"books-grid\">\n      {!searchBooks\n        ? shelvedBooks.map((book) => {\n            return (\n              <div key={book.id}>\n                <Book book={book} onBookshelfUpdate={onBookshelfUpdate} />\n              </div>\n            );\n          })\n        : searchBooks.map((book) => {\n            const shelvedCopy = shelvedBooks.filter(\n              (shelvedBook) => shelvedBook.id === book.id\n            );\n            return shelvedCopy.length > 0 ? (\n              <div key={book.id}>\n                <Book\n                  book={{ ...book, shelf: shelvedCopy[0].shelf }}\n                  onBookshelfUpdate={onBookshelfUpdate}\n                />\n              </div>\n            ) : (\n              <div key={book.id}>\n                <Book book={book} onBookshelfUpdate={onBookshelfUpdate} />\n              </div>\n            );\n          })}\n    </ol>\n  );\n};\n\nBooksGrid.propTypes = {\n  shelvedBooks: PropTypes.array.isRequired,\n  searchBooks: PropTypes.array,\n  onBookshelfUpdate: PropTypes.func,\n};\n\nexport default BooksGrid;\n"]},"metadata":{},"sourceType":"module"}