{"ast":null,"code":"var _jsxFileName = \"/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/SearchInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport debouce from \"lodash.debounce\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchInput = ({\n  setShowingResults,\n  setEmptyResult\n}) => {\n  _s();\n\n  const [searchInput, setSearchInput] = useState(\"\");\n  useEffect(() => {}, [searchInput]);\n\n  const handleSearch = value => {\n    console.log({\n      value\n    });\n    resetSearchResults();\n\n    const searchForBooks = async () => {\n      const res = await BooksAPI.search(value);\n      console.log({\n        res\n      });\n\n      if (res.error) {\n        setEmptyResult(true);\n      } else {\n        setShowingResults(res);\n      }\n    };\n\n    setSearchInput(value);\n\n    if (value !== null && value !== \"\") {\n      searchForBooks();\n    }\n  };\n\n  const resetSearchResults = () => {\n    setShowingResults([]);\n    setEmptyResult(false);\n  };\n\n  const debouncedResults = useMemo(() => {\n    return debouce(event => handleSearch(event.target.value), 300);\n  }, []);\n  useEffect(() => {\n    return () => {\n      debouncedResults.cancel();\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books-input-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchInput,\n      placeholder: \"Search by title, author, or ISBN\",\n      onChange: debouncedResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchInput, \"NigL2MIaIdnkrZXKXu9kIjn5BsQ=\");\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/SearchInput.js"],"names":["useState","useEffect","useMemo","debouce","BooksAPI","SearchInput","setShowingResults","setEmptyResult","searchInput","setSearchInput","handleSearch","value","console","log","resetSearchResults","searchForBooks","res","search","error","debouncedResults","event","target","cancel"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAD,KAA2C;AAAA;;AAC7D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACO,WAAD,CAAX,CAAT;;AAEA,QAAME,YAAY,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ;AACAG,IAAAA,kBAAkB;;AAElB,UAAMC,cAAc,GAAG,YAAY;AACjC,YAAMC,GAAG,GAAG,MAAMZ,QAAQ,CAACa,MAAT,CAAgBN,KAAhB,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEG,QAAAA;AAAF,OAAZ;;AACA,UAAIA,GAAG,CAACE,KAAR,EAAe;AACbX,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OAFD,MAEO;AACLD,QAAAA,iBAAiB,CAACU,GAAD,CAAjB;AACD;AACF,KARD;;AAUAP,IAAAA,cAAc,CAACE,KAAD,CAAd;;AAEA,QAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;AAClCI,MAAAA,cAAc;AACf;AACF,GAnBD;;AAqBA,QAAMD,kBAAkB,GAAG,MAAM;AAC/BR,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAC,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAHD;;AAKA,QAAMY,gBAAgB,GAAGjB,OAAO,CAAC,MAAM;AACrC,WAAOC,OAAO,CAACiB,KAAK,IAAIV,YAAY,CAACU,KAAK,CAACC,MAAN,CAAaV,KAAd,CAAtB,EAA4C,GAA5C,CAAd;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXkB,MAAAA,gBAAgB,CAACG,MAAjB;AACD,KAFD;AAGD,GAJQ,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEd,WAFT;AAGE,MAAA,WAAW,EAAC,kCAHd;AAIE,MAAA,QAAQ,EAAEW;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnDD;;GAAMd,W;;KAAAA,W;AAqDN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport debouce from \"lodash.debounce\";\n\nimport * as BooksAPI from \"./BooksAPI\";\n\nconst SearchInput = ({ setShowingResults, setEmptyResult }) => {\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  useEffect(() => {}, [searchInput]);\n\n  const handleSearch = (value) => {\n    console.log({ value });\n    resetSearchResults();\n\n    const searchForBooks = async () => {\n      const res = await BooksAPI.search(value);\n      console.log({ res });\n      if (res.error) {\n        setEmptyResult(true);\n      } else {\n        setShowingResults(res);\n      }\n    };\n\n    setSearchInput(value);\n\n    if (value !== null && value !== \"\") {\n      searchForBooks();\n    }\n  };\n\n  const resetSearchResults = () => {\n    setShowingResults([]);\n    setEmptyResult(false);\n  };\n\n  const debouncedResults = useMemo(() => {\n    return debouce(event => handleSearch(event.target.value), 300);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      debouncedResults.cancel();\n    };\n  });\n\n  return (\n    <div className=\"search-books-input-wrapper\">\n      <input\n        type=\"text\"\n        value={searchInput}\n        placeholder=\"Search by title, author, or ISBN\"\n        onChange={debouncedResults}\n      />\n    </div>\n  );\n};\n\nexport default SearchInput;\n"]},"metadata":{},"sourceType":"module"}