{"ast":null,"code":"var _jsxFileName = \"/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/BookshelfChanger.js\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookshelfChanger = ({\n  book,\n  onBookshelfUpdate\n}) => {\n  const handleChange = async value => {\n    onBookshelfUpdate({ ...book,\n      shelf: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-shelf-changer\",\n    children: book.shelf && book.shelf !== \"none\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n      value: book.shelf,\n      onChange: event => handleChange(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        disabled: true,\n        children: \"Move to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"currentlyReading\",\n        children: \"Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wantToRead\",\n        children: \"Want to Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"read\",\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n      value: \"none\",\n      onChange: event => handleChange(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        disabled: true,\n        children: \"Add to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"currentlyReading\",\n        children: \"Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wantToRead\",\n        children: \"Want to Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"read\",\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BookshelfChanger;\nBookshelfChanger.propTypes = {\n  book: PropTypes.object.isRequired,\n  onBookshelfUpdate: PropTypes.func\n};\nexport default BookshelfChanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookshelfChanger\");","map":{"version":3,"sources":["/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/BookshelfChanger.js"],"names":["PropTypes","BooksAPI","BookshelfChanger","book","onBookshelfUpdate","handleChange","value","shelf","event","target","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAiC;AACxD,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCF,IAAAA,iBAAiB,CAAC,EAAE,GAAGD,IAAL;AAAWI,MAAAA,KAAK,EAAED;AAAlB,KAAD,CAAjB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,cACGH,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACI,KAAL,KAAe,MAA7B,gBACC;AACE,MAAA,KAAK,EAAEJ,IAAI,CAACI,KADd;AAEE,MAAA,QAAQ,EAAGC,KAAD,IAAWH,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaH,KAAd,CAFnC;AAAA,8BAIE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAcC;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,QAAQ,EAAGE,KAAD,IAAWH,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaH,KAAd,CAFnC;AAAA,8BAIE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAnCD;;KAAMJ,gB;AAqCNA,gBAAgB,CAACQ,SAAjB,GAA6B;AAC3BP,EAAAA,IAAI,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADI;AAE3BR,EAAAA,iBAAiB,EAAEJ,SAAS,CAACa;AAFF,CAA7B;AAKA,eAAeX,gBAAf","sourcesContent":["import PropTypes from \"prop-types\";\n\nimport * as BooksAPI from \"./BooksAPI\";\n\nconst BookshelfChanger = ({ book, onBookshelfUpdate }) => {\n  const handleChange = async (value) => {\n    onBookshelfUpdate({ ...book, shelf: value });\n  };\n\n  return (\n    <div className=\"book-shelf-changer\">\n      {book.shelf && book.shelf !== \"none\" ? (\n        <select\n          value={book.shelf}\n          onChange={(event) => handleChange(event.target.value)}\n        >\n          <option value=\"none\" disabled>\n            Move to...\n          </option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n          <option value=\"none\">None</option>\n        </select>\n      ) : (\n        <select\n          value=\"none\"\n          onChange={(event) => handleChange(event.target.value)}\n        >\n          <option value=\"none\" disabled>\n            Add to...\n          </option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n        </select>\n      )}\n    </div>\n  );\n};\n\nBookshelfChanger.propTypes = {\n  book: PropTypes.object.isRequired,\n  onBookshelfUpdate: PropTypes.func,\n};\n\nexport default BookshelfChanger;\n"]},"metadata":{},"sourceType":"module"}