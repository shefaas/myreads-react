{"ast":null,"code":"var _jsxFileName = \"/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Shelf from \"./Shelf\";\nimport SearchBooks from \"./SearchBooks\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [currentlyReadingBooks, setCurrentlyReadingBooks] = useState([]);\n  const [wantToReadBooks, setWantToReadBooks] = useState([]);\n  const [readBooks, setReadBooks] = useState([]);\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const res = await BooksAPI.getAll();\n      console.log({\n        res\n      });\n      setBooks(res);\n    };\n\n    const categorizeBooks = () => {\n      console.log(\"inside categorizeBooks\");\n      books.map(book => {\n        console.log(book.shelf);\n\n        if (book.shelf === \"currentlyReading\") {\n          console.log({\n            book\n          });\n          setCurrentlyReadingBooks(currentlyReadingBooks.concat(book));\n        } else if (book.shelf === \"wantToRead\") {\n          setWantToReadBooks(wantToReadBooks.concat(book));\n        } else if (book.shelf === \"read\") {\n          setReadBooks(readBooks.concat(book));\n        }\n      });\n    };\n\n    getAllBooks();\n    categorizeBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Shelf, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(SearchBooks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"ycwlmtAB5q4BzxtLPQq50turT5I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/App.js"],"names":["Routes","Route","Shelf","SearchBooks","BooksAPI","useState","useEffect","App","books","setBooks","currentlyReadingBooks","setCurrentlyReadingBooks","wantToReadBooks","setWantToReadBooks","readBooks","setReadBooks","getAllBooks","res","getAll","console","log","categorizeBooks","map","book","shelf","concat"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACK,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,WAAW,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMb,QAAQ,CAACc,MAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,QAAAA;AAAD,OAAZ;AACAR,MAAAA,QAAQ,CAACQ,GAAD,CAAR;AACH,KAJD;;AAKA,UAAMI,eAAe,GAAG,MAAM;AAC1BF,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEAZ,MAAAA,KAAK,CAACc,GAAN,CAAWC,IAAD,IAAU;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,KAAjB;;AACA,YAAID,IAAI,CAACC,KAAL,KAAe,kBAAnB,EAAuC;AACnCL,UAAAA,OAAO,CAACC,GAAR,CAAY;AAACG,YAAAA;AAAD,WAAZ;AACAZ,UAAAA,wBAAwB,CAACD,qBAAqB,CAACe,MAAtB,CAA6BF,IAA7B,CAAD,CAAxB;AACH,SAHD,MAIK,IAAIA,IAAI,CAACC,KAAL,KAAe,YAAnB,EAAiC;AAClCX,UAAAA,kBAAkB,CAACD,eAAe,CAACa,MAAhB,CAAuBF,IAAvB,CAAD,CAAlB;AACH,SAFI,MAGA,IAAIA,IAAI,CAACC,KAAL,KAAe,MAAnB,EAA2B;AAC5BT,UAAAA,YAAY,CAACD,SAAS,CAACW,MAAV,CAAiBF,IAAjB,CAAD,CAAZ;AACH;AACJ,OAZD;AAaH,KAhBD;;AAkBAP,IAAAA,WAAW;AACXK,IAAAA,eAAe;AAElB,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,OAAO,eACzB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eACzB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA9CQd,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Shelf from \"./Shelf\"\nimport SearchBooks from \"./SearchBooks\"\nimport * as BooksAPI from \"./BooksAPI\";\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n    const [books, setBooks] = useState([]);\n\n    const [currentlyReadingBooks, setCurrentlyReadingBooks] = useState([]);\n    const [wantToReadBooks, setWantToReadBooks] = useState([]);\n    const [readBooks, setReadBooks] = useState([]);\n\n    useEffect(() => {\n        const getAllBooks = async () => {\n            const res = await BooksAPI.getAll();\n            console.log({res});\n            setBooks(res);\n        }\n        const categorizeBooks = () => {\n            console.log(\"inside categorizeBooks\")\n            \n            books.map((book) => {\n                console.log(book.shelf)\n                if (book.shelf === \"currentlyReading\") {\n                    console.log({book})\n                    setCurrentlyReadingBooks(currentlyReadingBooks.concat(book));\n                }\n                else if (book.shelf === \"wantToRead\") {\n                    setWantToReadBooks(wantToReadBooks.concat(book));\n                }\n                else if (book.shelf === \"read\") {\n                    setReadBooks(readBooks.concat(book));\n                }\n            })\n        }\n\n        getAllBooks();\n        categorizeBooks();\n\n    }, [])\n\n    return (\n        <Routes>\n            <Route exact path=\"/\" element={\n                <Shelf/>\n            }/>\n            <Route path=\"/search\" element={\n                <SearchBooks />\n            }/>\n        </Routes>\n    );\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}