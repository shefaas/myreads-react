{"ast":null,"code":"var _jsxFileName = \"/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/MyRead.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Bookshelf from \"./Bookshelf\";\nimport SearchBooks from \"./SearchBooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyRead = ({\n  books,\n  setBooks\n}) => {\n  _s();\n\n  const handleBookshelfUpdate = book => {\n    setBooks(books.map(b => b.id === book.id ? { ...b,\n      shelf: \"ðŸ‘‹\"\n    } : b // if (b.id === book.id) {\n    //   console.log(\"before updating: \", b.shelf);\n    //   b.shelf = book.shelf;\n    //   console.log(\"after updating: \", b.shelf);\n    // }\n    // return b;\n    ));\n  };\n\n  useEffect(() => {}, [books]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-books-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"MyRead\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-books-content\",\n          children: [/*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Currently Reading\",\n            bookshelfCode: \"currentlyReading\",\n            books: books,\n            onBookshelfUpdate: handleBookshelfUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Want To Read\",\n            bookshelfCode: \"wantToRead\",\n            books: books,\n            onBookshelfUpdate: handleBookshelfUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Read\",\n            bookshelfCode: \"read\",\n            books: books,\n            onBookshelfUpdate: handleBookshelfUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(SearchBooks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyRead, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyRead;\nexport default MyRead;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRead\");","map":{"version":3,"sources":["/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/MyRead.js"],"names":["useState","useEffect","Routes","Route","Bookshelf","SearchBooks","MyRead","books","setBooks","handleBookshelfUpdate","book","map","b","id","shelf"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AACtC,QAAMC,qBAAqB,GAAIC,IAAD,IAAU;AACtCF,IAAAA,QAAQ,CACND,KAAK,CAACI,GAAN,CAAWC,CAAD,IACPA,CAAC,CAACC,EAAF,KAASH,IAAI,CAACG,EAAf,GAAqB,EAAE,GAAGD,CAAL;AAAQE,MAAAA,KAAK,EAAE;AAAf,KAArB,GAA6CF,CAD/C,CAEE;AACA;AAEA;AACA;AACA;AACA;AARF,KADM,CAAR;AAYD,GAbD;;AAeAX,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACM,KAAD,CAAX,CAAT;AAEA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,OAAO,eACL;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,mBADR;AAEE,YAAA,aAAa,EAAC,kBAFhB;AAGE,YAAA,KAAK,EAAEA,KAHT;AAIE,YAAA,iBAAiB,EAAEE;AAJrB;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,cADR;AAEE,YAAA,aAAa,EAAC,YAFhB;AAGE,YAAA,KAAK,EAAEF,KAHT;AAIE,YAAA,iBAAiB,EAAEE;AAJrB;AAAA;AAAA;AAAA;AAAA,kBAPF,eAaE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,MADR;AAEE,YAAA,aAAa,EAAC,MAFhB;AAGE,YAAA,KAAK,EAAEF,KAHT;AAIE,YAAA,iBAAiB,EAAEE;AAJrB;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,eAgCE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAtDD;;GAAMH,M;;KAAAA,M;AAwDN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Bookshelf from \"./Bookshelf\";\nimport SearchBooks from \"./SearchBooks\";\n\nconst MyRead = ({ books, setBooks }) => {\n  const handleBookshelfUpdate = (book) => {\n    setBooks(\n      books.map((b) =>\n        (b.id === book.id) ? { ...b, shelf: \"ðŸ‘‹\" } : b\n        // if (b.id === book.id) {\n        //   console.log(\"before updating: \", b.shelf);\n\n        //   b.shelf = book.shelf;\n        //   console.log(\"after updating: \", b.shelf);\n        // }\n        // return b;\n      )\n    );\n  };\n\n  useEffect(() => {}, [books]);\n\n  return (\n    <Routes>\n      <Route\n        exact\n        path=\"/\"\n        element={\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyRead</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <Bookshelf\n                title=\"Currently Reading\"\n                bookshelfCode=\"currentlyReading\"\n                books={books}\n                onBookshelfUpdate={handleBookshelfUpdate}\n              />\n              <Bookshelf\n                title=\"Want To Read\"\n                bookshelfCode=\"wantToRead\"\n                books={books}\n                onBookshelfUpdate={handleBookshelfUpdate}\n              />\n              <Bookshelf\n                title=\"Read\"\n                bookshelfCode=\"read\"\n                books={books}\n                onBookshelfUpdate={handleBookshelfUpdate}\n              />\n            </div>\n          </div>\n        }\n      />\n      <Route path=\"/search\" element={<SearchBooks />} />\n    </Routes>\n  );\n};\n\nexport default MyRead;\n"]},"metadata":{},"sourceType":"module"}