{"ast":null,"code":"var _jsxFileName = \"/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport BooksGrid from \"./BooksGrid\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = ({\n  onBookshelfUpdate\n}) => {\n  _s();\n\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [showingResults, setShowingResults] = useState([]); //   const showingResults =\n  //     searchInput === \"\"\n  //       ? books\n  //       : books.filter((book) =>\n  //           book.title.toLowerCase().includes(searchInput.toLowerCase())\n  //         );\n\n  useEffect(() => {}, [searchInput]);\n\n  const handleSearch = value => {\n    // setShowingResults([]);\n    const searchForBooks = async () => {\n      const res = await BooksAPI.search(value);\n      console.log({\n        res\n      });\n      setShowingResults(res);\n    };\n\n    setSearchInput(value);\n    if (value !== null && value !== \"\") searchForBooks();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"close-search\",\n          to: \"/\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchInput,\n            placeholder: \"Search by title, author, or ISBN\",\n            onChange: event => handleSearch(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: showingResults && showingResults.length > 0 && /*#__PURE__*/_jsxDEV(BooksGrid, {\n          books: showingResults,\n          onBookshelfUpdate: onBookshelfUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBooks, \"2Pv41EfufzkPssr+DFy03JjzZ78=\");\n\n_c = SearchBooks;\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["/Users/shefaasaad/Documents/Coding/react-udacity/myreads-react/starter/src/SearchBooks.js"],"names":["Link","BooksGrid","useState","useEffect","BooksAPI","SearchBooks","onBookshelfUpdate","searchInput","setSearchInput","showingResults","setShowingResults","handleSearch","value","searchForBooks","res","search","console","log","event","target","length"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA;;AAC7C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD,CAF6C,CAG7C;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACI,WAAD,CAAX,CAAT;;AAEA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACA,UAAMC,cAAc,GAAG,YAAY;AACjC,YAAMC,GAAG,GAAG,MAAMV,QAAQ,CAACW,MAAT,CAAgBH,KAAhB,CAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,QAAAA;AAAF,OAAZ;AACAJ,MAAAA,iBAAiB,CAACI,GAAD,CAAjB;AACD,KAJD;;AAKAN,IAAAA,cAAc,CAACI,KAAD,CAAd;AACA,QAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoCC,cAAc;AACnD,GATD;;AAWA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,cAAhB;AAA+B,UAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAEN,WAFT;AAGE,YAAA,WAAW,EAAC,kCAHd;AAIE,YAAA,QAAQ,EAAGW,KAAD,IAAWP,YAAY,CAACO,KAAK,CAACC,MAAN,CAAaP,KAAd;AAJnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGH,cAAc,IAAIA,cAAc,CAACW,MAAf,GAAwB,CAA1C,iBACC,QAAC,SAAD;AACE,UAAA,KAAK,EAAEX,cADT;AAEE,UAAA,iBAAiB,EAAEH;AAFrB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAlDD;;GAAMD,W;;KAAAA,W;AAoDN,eAAeA,WAAf","sourcesContent":["import { Link } from \"react-router-dom\";\nimport BooksGrid from \"./BooksGrid\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nconst SearchBooks = ({ onBookshelfUpdate }) => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [showingResults, setShowingResults] = useState([]);\n  //   const showingResults =\n  //     searchInput === \"\"\n  //       ? books\n  //       : books.filter((book) =>\n  //           book.title.toLowerCase().includes(searchInput.toLowerCase())\n  //         );\n\n  useEffect(() => {}, [searchInput]);\n\n  const handleSearch = (value) => {\n    // setShowingResults([]);\n    const searchForBooks = async () => {\n      const res = await BooksAPI.search(value);\n      console.log({ res });\n      setShowingResults(res);\n    };\n    setSearchInput(value);\n    if (value !== null && value !== \"\") searchForBooks();\n  };\n\n  return (\n    <div>\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to=\"/\">\n            Close\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search by title, author, or ISBN\"\n              onChange={(event) => handleSearch(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          {showingResults && showingResults.length > 0 && (\n            <BooksGrid\n              books={showingResults}\n              onBookshelfUpdate={onBookshelfUpdate}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}